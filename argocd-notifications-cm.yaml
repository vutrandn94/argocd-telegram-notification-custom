apiVersion: v1
data:
  context: |
    argocdURL: https://argocd.example.local
  service.webhook.telegram: |
    url: https://api.telegram.org
    headers:
      - name: Content-Type
        value: application/json
  template.telegram_notification: |
    webhook:
      telegram:
        method: POST
        path: /bot{{.app.metadata.annotations.telegram_bot_token}}/sendMessage
        body: |
         {"chat_id": "{{.app.metadata.annotations.telegram_channel_id}}","text": "*[ArgoCD - App `{{.app.metadata.name}}`] Sync Notification*\n*---------------------------------------*\n*Project:* `{{.app.spec.project}}`\n*Cluster:* [{{.app.spec.destination.server}}]\n*App Name:* `{{.app.metadata.name}}`\n*App URL:* [App URL]({{.context.argocdUrl}}/applications/{{.app.metadata.name}})\n*Sync Status:* `{{.app.status.sync.status}}`\n*Repository:* [Repository URL]({{.app.spec.source.repoURL}})\n*Last sync state:* `{{.app.status.operationState.phase}}`\n*Commit:* [{{.app.status.sync.revision | trunc 8}}]({{.app.spec.source.repoURL | replace ".git" "" }}/commit/{{.app.status.sync.revision}})","parse_mode": "Markdown","disable_notification": true}
  trigger.telegram_notification: |
    - when: app.status.operationState.phase in ['Succeeded', 'Failed']
      send:
        - telegram_notification
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: notifications-controller
    app.kubernetes.io/name: argocd-notifications-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-notifications-cm
